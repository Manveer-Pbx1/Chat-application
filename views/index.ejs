<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat app</title>
  </head>
  <style>
    body { margin: 0; padding-bottom: 3rem; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; }

    #form { background: rgba(0, 0, 0, 0.15); padding: 0.25rem; position: fixed; bottom: 0; left: 0; right: 0; display: flex; height: 3rem; box-sizing: border-box; backdrop-filter: blur(10px); }
    #message { border: none; padding: 0 1rem; flex-grow: 1; border-radius: 2rem; margin: 0.25rem; }
    #message:focus { outline: none; }
    #form > button { background: #333; border: none; padding: 0 1rem; margin: 0.25rem; border-radius: 3px; outline: none; color: #fff; }
    #messages { list-style-type: none; margin: 0; padding: 0; }
    #messages > li { padding: 0.5rem 1rem; color: var(--user-color); }
    #messages > li:nth-child(odd) { background: #efefef; }
    #typing  {position: fixed; bottom: 3.5rem; left: 1rem; color: #666;}
    nav {
            background-color: rgb(135, 235, 168);
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 1rem 2rem;
        }

        nav h1 {
            margin: 0;
            color: blue;
            font-size: 2rem;

        }

         ul {
            list-style-type: none;
        }

        li {
            margin-left: 1rem;
        }

        li:first-child {
            margin-left: 0;
        }

        li>a {
            text-decoration: none;
            color: #333;
            font-weight: bold;
            transition: color 0.3s ease;
        }

        li>a:hover {
            color: blue;
        }

  </style>
  <body>
<nav>
      <h1>Chat- Global Mode</h1>
      <ul>
        <li><a href="/">Sign out</a></li>
      </ul>
    </nav>
    <div id="online-users"></div>
    <div id="typing"></div>
    <ul id="messages"></ul>
    <form id="form" autocomplete="off">
      <input type="text" id="message" placeholder="Enter message... ">
      <button id="send">Send</button>
    </form>
    <script src="/socket.io/socket.io.js"></script>
    <script>
document.addEventListener('DOMContentLoaded', () => {
  const socket = io();
  const form = document.getElementById('form');
  const input = document.getElementById('message');
  const messages = document.getElementById('messages');
  const typing = document.getElementById('typing');
  let typingTimer;
  const nickname = '<%= locals.name %>';
  let userColor;
  let otherColor;

  form.addEventListener('submit', function (e) {
    e.preventDefault();
    if (input.value && nickname) {
      const message = input.value;
      socket.emit('message', { text: message, nickname: nickname}); // Include user's color in the message
      input.value = '';
    }
  });
  //typing
  input.addEventListener('input', function(){
    clearTimeout(typingTimer);
    socket.emit('typing');
    typingTimer = setTimeout(function(){
      socket.emit('stop typing');
    }, 1000);
  })

  socket.on('user typing', function(user){
    typing.textContent = user + ' is typing...';
  })
  socket.on('user stopped typing', function(){
    typing.textContent = '';
  })

  socket.on('message', function (msg) {
    var item = document.createElement('li');
    var messageText = document.createElement('p');
    messageText.textContent = `${msg.nickname}: ${msg.text}`;
    messageText.style.color = msg.color; 
    item.appendChild(messageText);  
    messages.appendChild(item);
    window.scrollTo(0, document.body.scrollHeight);
  });
  // User connected
  socket.emit("new_user", nickname);
  });
  //User disconnected
  socket.emit("disconnect", nickname);
    </script>
  </body>
</html>